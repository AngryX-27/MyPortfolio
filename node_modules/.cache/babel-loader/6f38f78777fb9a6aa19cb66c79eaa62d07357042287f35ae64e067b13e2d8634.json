{"ast":null,"code":"var _jsxFileName = \"/Users/rum/Downloads/IT/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/GitHub/\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E/MyPortfolio/src/containers/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport Greeting from \"./greeting/Greeting\";\nimport Skills from \"./skills/Skills\";\nimport StackProgress from \"./skillProgress/skillProgress\";\nimport WorkExperience from \"./workExperience/WorkExperience\";\nimport Projects from \"./projects/Projects\";\nimport StartupProject from \"./StartupProjects/StartupProject\";\nimport Achievement from \"./achievement/Achievement\";\nimport Footer from \"../components/footer/Footer\";\nimport Education from \"./education/Education\";\nimport ScrollToTopButton from \"./topbutton/Top\";\nimport Twitter from \"./twitter-embed/twitter\";\nimport Profile from \"./profile/Profile\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\nimport { splashScreen, achievementSection } from \"../portfolio\";\n//  ^^^ обратите внимание: import { achievementSection }\n\nimport { StyleProvider } from \"../contexts/StyleContext\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] = useState(true);\n  useEffect(() => {\n    if (splashScreen.enabled) {\n      const splashTimer = setTimeout(() => {\n        setIsShowingSplashAnimation(false);\n      }, splashScreen.duration);\n      return () => clearTimeout(splashTimer);\n    }\n  }, []);\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isDark ? \"dark-mode\" : null,\n    children: /*#__PURE__*/_jsxDEV(StyleProvider, {\n      value: {\n        isDark: isDark,\n        changeTheme: changeTheme\n      },\n      children: isShowingSplashAnimation && splashScreen.enabled ? /*#__PURE__*/_jsxDEV(SplashScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Greeting, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Skills, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StackProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Education, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WorkExperience, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StartupProject, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), achievementSection.display && /*#__PURE__*/_jsxDEV(Achievement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(Twitter, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ScrollToTopButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"rghpsch+4V7lC+t/3k8DiNFjDyw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","Header","Greeting","Skills","StackProgress","WorkExperience","Projects","StartupProject","Achievement","Footer","Education","ScrollToTopButton","Twitter","Profile","SplashScreen","splashScreen","achievementSection","StyleProvider","useLocalStorage","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","darkPref","window","matchMedia","isDark","setIsDark","matches","isShowingSplashAnimation","setIsShowingSplashAnimation","enabled","splashTimer","setTimeout","duration","clearTimeout","changeTheme","className","children","value","fileName","_jsxFileName","lineNumber","columnNumber","display","_c","$RefreshReg$"],"sources":["/Users/rum/Downloads/IT/Рабочие проекты/GitHub/Портфолио/MyPortfolio/src/containers/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/header/Header\";\nimport Greeting from \"./greeting/Greeting\";\nimport Skills from \"./skills/Skills\";\nimport StackProgress from \"./skillProgress/skillProgress\";\nimport WorkExperience from \"./workExperience/WorkExperience\";\nimport Projects from \"./projects/Projects\";\nimport StartupProject from \"./StartupProjects/StartupProject\";\nimport Achievement from \"./achievement/Achievement\";\nimport Footer from \"../components/footer/Footer\";\nimport Education from \"./education/Education\";\nimport ScrollToTopButton from \"./topbutton/Top\";\nimport Twitter from \"./twitter-embed/twitter\";\nimport Profile from \"./profile/Profile\";\nimport SplashScreen from \"./splashScreen/SplashScreen\";\nimport { splashScreen, achievementSection } from \"../portfolio\"; \n//  ^^^ обратите внимание: import { achievementSection }\n\nimport { StyleProvider } from \"../contexts/StyleContext\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nimport \"./Main.scss\";\n\nconst Main = () => {\n  const darkPref = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const [isDark, setIsDark] = useLocalStorage(\"isDark\", darkPref.matches);\n  const [isShowingSplashAnimation, setIsShowingSplashAnimation] = useState(true);\n\n  useEffect(() => {\n    if (splashScreen.enabled) {\n      const splashTimer = setTimeout(() => {\n        setIsShowingSplashAnimation(false);\n      }, splashScreen.duration);\n\n      return () => clearTimeout(splashTimer);\n    }\n  }, []);\n\n  const changeTheme = () => {\n    setIsDark(!isDark);\n  };\n\n  return (\n    <div className={isDark ? \"dark-mode\" : null}>\n      <StyleProvider value={{ isDark: isDark, changeTheme: changeTheme }}>\n        {isShowingSplashAnimation && splashScreen.enabled ? (\n          <SplashScreen />\n        ) : (\n          <>\n            <Header />\n            <Greeting />\n            <Skills />\n            <StackProgress />\n            <Education />\n            <WorkExperience />\n            <Projects />\n            <StartupProject />\n\n            {/* Условный рендер Achievement: если achievementSection.display === true */}\n            {achievementSection.display && <Achievement />}\n\n            <Twitter />\n            <Profile />\n            <Footer />\n            <ScrollToTopButton />\n          </>\n        )}\n      </StyleProvider>\n    </div>\n  );\n};\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}